generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profiles {
  id         String     @id @db.Uuid
  updatedAt  DateTime?  @db.Timestamptz(6) @map("updated_at")
  username   String?    @unique
  avatarUrl  String?    @map("avatar_url")
  website    String?
  vehicles   Vehicles[]

  @@map("profiles")
}

model Services {
  id          BigInt    @id @default(autoincrement())
  createdAt   DateTime? @default(now()) @db.Timestamptz(6) @map("created_at")
  name        String?
  description String?
  vehicleId   BigInt?   @map("vehicle_id")
  vehicles    Vehicles? @relation(fields: [vehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("services")
}

model VehicleTypes {
  id         BigInt     @id @default(autoincrement())
  createdAt  DateTime?  @default(now()) @db.Timestamptz(6) @map("created_at")
  name       String?    @db.VarChar
  vehicles   Vehicles[]

  @@map("vehicle_types")
}

model Vehicles {
  id            BigInt         @id @default(autoincrement())
  createdAt     DateTime?      @default(now()) @db.Timestamptz(6) @map("created_at")
  name          String?        @db.VarChar
  ownerId       String?        @db.Uuid @map("owner_id")
  typeId        BigInt?        @map("type_id")
  profiles      Profiles?      @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vehicle_types VehicleTypes?  @relation(fields: [typeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  services      Services[]

  @@map("vehicles")
}
