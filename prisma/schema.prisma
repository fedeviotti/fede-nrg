generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vehicles {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  name        String       @db.VarChar(255)
  description String?
  isOwned     Boolean      @default(true) @map("is_owned")
  typeId      Int          @map("type_id")
  ownerId     String?      @map("owner_id") @db.Uuid
  owner       Profiles?    @relation(fields: [ownerId], references: [id])
  type        VehicleTypes @relation(fields: [typeId], references: [id])
  services    Services[]

  @@map("vehicles")
}

model VehicleTypes {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime?  @default(now()) @map("created_at")
  name        String?    @db.VarChar
  description String?
  vehicle     Vehicles[]

  @@map("vehicle_types")
}

model Profiles {
  id           String         @id @db.Uuid
  updatedAt    DateTime?      @map("updated_at") @db.Timestamptz(6)
  email        String         @unique
  username     String?        @unique
  bio          String?
  avatarUrl    String?        @map("avatar_url")
  website      String?
  vehicles     Vehicles[]
  young_orders young_orders[] @relation("profilesToyoung_orders")

  @@map("profiles")
}

model Services {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at")
  name        String?
  description String?
  vehicleId   Int?      @map("vehicle_id")
  vehicle     Vehicles? @relation(fields: [vehicleId], references: [id])

  @@map("services")
}

model young_orders {
  id                 Int       @id
  base               String?
  quote              String?
  amount             Float?
  volume             Float?
  rate               Float?
  brokerage          Float?
  brokerage_currency String?
  side               String?
  date               DateTime? @db.Timestamptz(6)
  owner_id           String?   @db.Uuid
  profiles           Profiles? @relation("profilesToyoung_orders", fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
