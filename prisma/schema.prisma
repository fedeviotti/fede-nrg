generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        String    @id(map: "profiles_pkey") @db.Uuid
  updatedAt DateTime? @db.Timestamptz(6)
  username  String?   @unique(map: "profiles_username_key")
  avatarUrl String?
  website   String?
  email     String?
  Vehicle   Vehicle[]
}

model Service {
  id          BigInt    @id(map: "services_pkey") @default(autoincrement())
  createdAt   DateTime? @default(now()) @db.Timestamptz(6)
  name        String?
  description String?
  vehicleId   BigInt?
  Vehicle     Vehicle?  @relation(fields: [vehicleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Vehicle {
  id          BigInt       @id(map: "vehicles_pkey") @default(autoincrement())
  createdAt   DateTime?    @default(now()) @db.Timestamptz(6)
  name        String?      @db.VarChar
  ownerId     String?      @db.Uuid
  typeId      BigInt?
  Profile     Profile?     @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  VehicleType VehicleType? @relation(fields: [typeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Service     Service[]
}

model VehicleType {
  id        BigInt    @id(map: "vehicle_types_pkey") @default(autoincrement())
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  name      String?   @db.VarChar
  Vehicle   Vehicle[]
}
